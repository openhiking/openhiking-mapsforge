##################################################################
### Highways
scope=way
if (highway=*) 

#    highway=path & layer="-5" { delete layer }
    proposed=yes | disused=yes | abandoned=yes  { delete highway;  delete surface; stop }
    highway=service & serice=driveway & access=private & trail_color!=* { delete highway;  delete surface; stop }

    highway~'primary|secondary|tertiary|unclassified|residential|living_street|service|track|path|footway|cycleway|bridleway|step' & access~'no|private|agricultural|forestry' & foot!=* { foot=no }
    access=customers & foot!=* { foot=customers }
    vehicle!=* & motor_vehicle!=* & access~'no|private|agricultural|forestry' { motor_vehicle=no }
    motor_vehicle!=* & vehicle~'no|private|agricultural|forestry'  { motor_vehicle=no }

    if (highway~'unclassified|residential|living_street|service') 
        surface~'fine_gravel|compacted|pebblestone|rock|grass_paver|gravel|unpaved' { highway=track; tracktype=grade1 }
        surface~'ground|earth|dirt|grass|mud|sand' { highway=track; tracktype=grade3 }
    end

    if (highway=track)
        surface~'paved|asphalt|chipseal|concrete|concrete:lanes|concrete:plates|paving_stones|sett|cobblestone|metal|wood' { highway=unclassified }
        tracktype!=grade1 & surface~'fine_gravel|compacted|pebblestone|grass_paver' { tracktype=grade1 } 
        tracktype~'grade1|grade2' & surface~'ground|earth|dirt|grass|mud|sand' { tracktype=grade3 }
    end

    highway=footway  & surface~'wood|gravel|ground|earth|dirt|grass|mud|sand' { highway=path }
    
    if (highway=path)
        surface~'paved|asphalt|chipseal|concrete' { highway=footway }
        via_ferrata_scale=* { highway=via_ferrata }
    end

    tunnel~'yes|avalanche_protector|building_passage|culvert' {layer='0' }

    () { delete surface; stop }
end

##################################################################
### Railways
disused:railway~'rail|light_rail|narrow_gauge|tram' { railway=disused; disused='{disused:railway}'; delete disused:railway; stop }

if (railway=*)
    proposed=yes  { delete railway; stop }
    tunnel~'yes|avalanche_protector|building_passage|culvert' {layer='0' }
    () {stop}
end

##################################################################
### Waterways
if (waterway=*)
    tunnel~'yes|avalanche_protector|building_passage|culvert' {layer='0' }
    () {stop}
end

##################################################################
### Landuses
scope=way,relation
if (landuse=industrial)
    plant:source=solar { delete landuse; power=plant }
    generator:source=solar { delete landuse; power=generator }
end

# Pitch surfaces
scope=way,relation
if (leisure=pitch)
    if (surface!=*)
        sport~'soccer|baseball|equestrian|croquet|shooting|model_aerodrome|rugby_league' { surface=grass }
        sport~'basketball|skateboard|karting|motor' { surface=asphalt }
        sport=tennis { surface=clay }
        sport~'beach_handball|beachvolleyball|ultimate|volleyball' { surface=sand }
    end
    () { stop}
end


scope=way,relation
if (landuse=*)
    () { stop}
end

##################################################################
### National parks and protected areas

scope=way,relation
if (boundary=protected_area)
    protect_class~'1a|1b' { protect_class='1'  }
    protect_class~'21|22|24' | heritage=*  { delete boundary; delete protect_class; stop }
    protection_title=* & name!=* { name='{protection_title}' }
    () { type=multipolygon; stop }
end    

if (boundary=national_park)
    () { type=multipolygon; stop }
end

if (leisure=nature_reserve)
    historic=archaeological_site { delete leisure; stop}
    boundary!~'national_park|protected_area'  { boundary=protected_area; type=multipolygon; stop }
end

##################################################################
### Clean-Ups

#Private amenities
scope=node,way
if (access ~'no|private' | ownership=private)
    amenity~'parking|public_bath|spa'  { delete amenity; delete access; stop}
    leisure~'beach_resort|sports_centre|swimming_pool'  { delete leisure; delete access; stop}
    tourism~'alpine_hut|apartment|camp_site|wilderness_hut' { delete tourism; delete access; stop}

    amenity~'bench|drinking_water|fuel|recycling|shelter|toilets'  { delete amenity; delete access; stop}
    leisure~'firepit|golf_course|horse_riding|ice_rink|picnic_table|pitch|pitch'  { delete leisure; delete access; stop}
    tourism~'chalet|picnic_site' { delete tourism; delete access; stop}
end

if (access=customers)
    amenity~'bench|drinking_water|fuel|recycling|shelter|toilets'  { delete amenity; delete access; stop}
    leisure~'firepit|golf_course|horse_riding|ice_rink|picnic_table|pitch|pitch'  { delete leisure; delete access; stop}
    tourism~'chalet|picnic_site' { delete tourism; delete access; stop}
end

scope=node,way
leisure=swimming_pool & (swimming_pool=personal | location=indoor ) { delete leisure; stop }
amenity=shelter & (shelter_type=public_transport | shelter=public_transport ) { delete amenity; delete shelter_type; stop }

scope=node
barrier=gate & entrance=home { delete barrier; delete entrance; stop }
natural~'saddle|tree|bay' & name!=*  { delete natural; stop }
place=locality & name!=* { delete place }

scope=way
natural~'valley|gorge|ridge|bay' & name!=*  { delete natural; stop }

##################################################################
### Common Remapping

scope=node,way
sport=swimming & leisure~'sports_centre|sports_hall|water_park'  { leisure=swimming_facility; delete sport }

scope=node
place=city & capital=yes  { place=capital}

##################################################################
### Buildings
scope=way,relation
if (building=*)
    building~'yes|commercial|kiosk|retail|warehouse' & shop~'department_store|mall|supermarket' {  building=supermarket}

    #building~'chapel|temple|church|cathedral|basilica|monastery|synagogue|mosque' { building=religious}
    building=temple { building=church}

    building~'civic|government|library|theatre' { building=public}
    building=yes & amenity~'library|theatre' {  building=public}
    building=yes & tourism=museum { building=museum}

    building~'childcare|kindergarten|school|college|university' { building=education}
    building=yes & amenity~'kindergarten|school|college|university' { building=education}

    building~'clinic' {  building=hospital}
    building=yes & amenity~'clinic|hospital'  { building=hospital}

    building~'train_station|parking' { building=transportation}

    building~'riding_hall|sports_hall|stadium' { building=sports_centre }
    leisure=sports_centre &  building!=sports_centre { building=sports_centre; delete leisure }

    building~'castle|gatehouse|pagoda|windmill' {  building=historic}
    building=* & (heritage=* | historic=*)  & man_made!=tower & building!=historic { building=historic}

    # Others
    building~'apartments|barracks|building|bungalow|cabin|detached|dormitory|farm|hotel|house|residential' { building=yes}
    building~'commercial|factory|industrial|office|retail|warehouse' { building=yes}
    building~'barn|conservatory|cowshed|farm_auxiliary|hut|shed|shelter|stable' { building=yes}
    building~'grandstand|pavilion' { building=yes}
    building~'boathouse|hangar|garages|water_tower|silo' { building=yes}
    building~'bunker|hangar|embassy' { building=yes}
end

##################################################################
### Recreational facilities
scope=way,relation
leisure=swimming_facility { building=swimming_facility }
leisure=sports_hall & building!=sports_centre {building=sports_centre }
garden:type=arboretum { garden:type=botanical }

if (landuse=recreation_ground)
    leisure=park { delete leisure }
    tourism=museum { delete tourism}
    () { stop}
end


##################################################################
# Historical objects

scope=node,way,relation
tourism=attraction & (amenity=* | leisure=* | historic=* | natural=* |  man_made=cross )  { delete tourism  }

if (historic=castle)
    ruins=* {  historic=ruins; ruins=castle; stop}
    castle_type~'stately|manor'  { historic=manor; delete castle_type }
end

historic~'fort|manor' & ruins=* { ruins='{historic}'; historic=ruins; stop   }

man_made~'mineshaft|adit' & (abandoned=yes | disused=yes) { historic=mine; delete man_made }
historic~'mine_adit|mine_adit|adit' { historic=mine }

if (historic=ruins)
    ruins!=* & castle_type=* { ruins='{castle_type}' }
    amenity=place_of_worship { delete amenity}
    military=bunker { delete historic}
    () { stop}
end

scope=node,way
historic=tomb & tomb=tumulus { historic=archaeological_site; archaeological_site=tumulus; delete tomb  }
amenity=place_of_worship & ruins=yes { historic=ruins; delete amenity}
man_made=obelisk & historic=memorial  { delete historic }

##################################################################
# Watering points

scope=node
if (natural=spring)
    spring:type=hot | temperature=hot  { natural=hot_spring }
    water_characteristic=mineral { natural=mineral_spring }
    () { stop}    
end

if (man_made=water_well)
    access~'no|private|customers' | pump=powered   { delete man_made; stop }
    name~'.*[gG]émeskút' | description~'.*[gG]émeskút' | description:hu~'.*[gG]émeskút'    { man_made=crane_well }
    drinking_water=yes { delete man_made; amenity=drinking_water; delete drinking_water }    
    () { stop}
end

disused:natural=spring  { natural=spring; seasonal=yes; stop }

##################################################################
# Natural objects

scope=node
natural=peak & man_made~'cross|summit_cross'  { delete man_made; summit:cross=yes }
natural=volcano & volcano:status!=active { natural=peak }
natural=bay & place=locality { delete place}

scope=node,way
##################################################################
# Towers
if (man_made=tower)
    if (tower:type~'observation|observation;communication')
        tourism=viewpoint | viewpoint=yes | access=yes { tower=outlook; delete tower:type; delete tourism  }    
        abandoned:tourism=viewpoint | disused:tourism=viewpoint { tower=outlook_closed; delete tower:type }
    end
    tower:type=bell_tower  { man_made=campanile; delete tower:type }
    tower:type=stupa  { man_made=stupa; delete tower:type }
    tower:type=communication  { man_made=mast; delete tower:type }
    tower:type=minaret & tourism=* { delete tourism }
    tower:type=defensive & tourism=* { delete tourism }    
    () { stop}
end

amenity=place_of_worship & name~'.*k.polna' & building!=chapel { building=chapel }
man_made=stupa & amenity=place_of_worship { delete amenity }


### Sport & leisure
scope=node,way
if (leisure=*)
    leisure!=golf_course & sport=golf { leisure=golf_course; delete sport }
    leisure!=ice_rink & sport~'ice_.*' { leisure=ice_rink; delete sport }
#   leisure!=fitness_centre & sport=fitness { leisure=fitness_centre; delete sport }
    leisure=spa { amenity=public_bath }
end        

amenity=spa { amenity=public_bath }

scope=node,way
tourism=camp_site & backcountry=yes { camp_site=basic; delete backcountry  }
shop=alcohol & drink:wine=retail { delete shop; craft=winery }


scope=node
highway=bus_stop & (operator~'BKV|RATB|DPB|STB|DKV|DKV Zrt\.' | network~'VOR|MHD Košice|RAT Brașov|Miskolc Városi Közlekedési Zrt\.' ) { bus_local=yes }

scope=way
shop=* & building=yes { building=shop }

scope=node
ford~'...+' & ford!=yes { ford=yes }
